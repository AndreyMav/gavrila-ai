{
  "name": "Gavrila - Ask",
  "nodes": [
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-5-mini",
          "mode": "list",
          "cachedResultName": "GPT-5-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You are structuring an operation for another AI coding agent based only on the text inside “Job Description”. Do not reference or summarize this prompt itself — only the Job Description content.\n\nWHAT TO RETURN\nReturn a single JSON object with exactly these fields: task_id, task_system, summary, instructions.\n\nFIELD RULES\n- task_id: Leave empty for a new task or when no valid ID/URL is present. If an existing task ID/URL is present, normalize and put it here.\n- task_system: One of \"linear\", \"github\", or \"\" if undetermined. Infer from explicit mentions (e.g., “in Linear”, “GitHub issue”) or from ID/URL format.\n- summary: A short title that describes the actual work to be done.\n- instructions: Clear, proofread objectives for the work to be done (not meta-routing).\n\nCRITICAL INTERPRETATION RULE (ROUTING VS. WORK)\nIf the Job Description contains meta-phrases about creating/opening/adding/filing a task/issue/ticket or mentions a system (“in Linear”, “in GitHub”), treat those phrases as routing metadata only. Use them to determine task_system and whether it is a new task (task_id stays empty if none provided). Do NOT include those meta-phrases in summary or instructions. The work is what remains after removing such meta-phrases.\nExamples of meta-phrases to strip (case-insensitive, flexible wording): “create a task”, “create a new issue”, “open a ticket”, “add a task in linear”, “file an issue”, “make a linear task to …”, “github issue to …”\n\nSUPPORTED SYSTEMS AND ID/URL DETECTION\n- Linear (task_system: \"linear\")\n  • ID format detected in text or URLs: 3–5 uppercase letters, hyphen, 1–5 digits (e.g., ABC-123, ABCDE-1).\n  • Linear URLs may include paths like linear.app/*/issue/ABC-123.\n- GitHub (task_system: \"github\")\n  • Same-repo issue: #123\n  • Cross-repo issue: owner/repo#456\n  • Bare number with contextual keywords (task, issue, ticket, implement, fix, close, resolve, work on, handle). Normalize such references to same-repo: “task 1” → “#1”.\n\nIf both a system term and an ID/URL appear, prefer the system that matches the ID/URL. If signals conflict, prefer the ID/URL signal.\n\nNEW VS EXISTING TASK\n- Existing task: A valid ID or URL is present. Put the normalized value into task_id. Do not mention the ID in summary or instructions.\n- New task: No valid ID/URL is present.\n  • If the first line is followed by a blank line, treat that first line as summary and the remainder as instructions.\n  • Otherwise, generate a concise summary from the text and use the remaining content (lightly proofread) as instructions.\n\nPROOFREADING\nLightly fix grammar/clarity while preserving meaning. Do not add requirements not present in the Job Description. Ensure summary and instructions are consistent and non-contradictory.\n\nOUTPUT FORMAT\nReturn only the JSON object with fields: task_id, task_system, summary, instructions. No extra text before or after the JSON. Do not mention “Job Description” or these instructions in the output.\n\nFALLBACK\nAfter stripping meta-phrases, if no actionable work remains and no task to work on specified:\n- summary: Clarify task objective\n- instructions: No work objective provided. Ask for details.\nIf task was specified assume the instructions to \"Work on the task\".\n\nJOB DESCRIPTION\n{{ $('AITask Command Received').item.json.request }}\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        688,
        -256
      ],
      "id": "9f0eee8c-a824-45fc-8d80-64613f2dbe62",
      "name": "Proofread task",
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "b3ctmsxoRYPFFcMa",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "workflow",
        "operation": "dispatchAndWait",
        "owner": {
          "__rl": true,
          "value": "={{ $('Configure').item.json.repository_url }}",
          "mode": "url"
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Configure').item.json.repository_url }}",
          "mode": "url"
        },
        "workflowId": {
          "__rl": true,
          "value": "auggie-task.yml",
          "mode": "filename"
        },
        "ref": {
          "__rl": true,
          "value": "={{ $('Configure').item.json.main_branch }}",
          "mode": "name"
        },
        "inputs": "={\n    \"taskJson\": {{ JSON.stringify(JSON.stringify($json)) }},\n    \"instructions\": {{ JSON.stringify($('Full Context').item.json.instructions) ?? \"Implement task as described.\"}}\n}\n"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        1776,
        -256
      ],
      "id": "f51b9777-1b7f-4fcf-afc3-01c7f4297b30",
      "name": "Run Agent",
      "webhookId": "3154a9e9-b7f8-4596-9bec-cae2b91938fb",
      "retryOnFail": true,
      "credentials": {
        "githubApi": {
          "id": "GaRxZmasFeiFFbDt",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        240,
        -256
      ],
      "id": "cd61d647-0534-49e5-813f-73f07d05da27",
      "name": "AITask Command Received"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b8d162c3-195a-4337-83dd-fe6dc2e82529",
              "name": "task_id",
              "value": "={{ $json.message.content.task_id }}",
              "type": "string"
            },
            {
              "id": "c2c2606f-f21d-452d-93ef-723a5f99f623",
              "name": "task_system",
              "value": "={{ $json.message.content.task_system }}",
              "type": "string"
            },
            {
              "id": "419e775e-240f-40f5-a4bc-3b158f2074d3",
              "name": "summary",
              "value": "={{ $json.message.content.summary }}",
              "type": "string"
            },
            {
              "id": "19638eba-0143-4a9e-af80-195684d25f9f",
              "name": "instructions",
              "value": "={{ $json.message.content.instructions }}",
              "type": "string"
            },
            {
              "id": "c4d0d8fd-915e-4a2f-ae1d-99c889a77d35",
              "name": "user_id",
              "value": "={{ $('AITask Command Received').item.json.user_id }}",
              "type": "string"
            },
            {
              "id": "b35b7960-bdbc-40c4-b6be-86899e56503c",
              "name": "command",
              "value": "={{ $('AITask Command Received').item.json.command }}",
              "type": "string"
            },
            {
              "id": "4aa242be-9075-4008-b8e3-990a97931a39",
              "name": "channel_id",
              "value": "={{ $('AITask Command Received').item.json.channel_id }}",
              "type": "string"
            },
            {
              "id": "01a85de3-ef18-4ff5-8ef5-19b3303659c5",
              "name": "message_id",
              "value": "={{ $('AITask Command Received').item.json.message_id }}",
              "type": "string"
            },
            {
              "id": "dc2e6da8-5019-455b-98ce-717a8e8a0391",
              "name": "source",
              "value": "={{ $('AITask Command Received').item.json.source }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1040,
        -256
      ],
      "id": "6eaed704-d5c4-4391-b653-0e896308a472",
      "name": "Full Context"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "wuIS4lmxJ8DhDmoW",
          "mode": "list",
          "cachedResultUrl": "/workflow/wuIS4lmxJ8DhDmoW",
          "cachedResultName": "Gavrila - Configure"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {}
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.3,
      "position": [
        448,
        -256
      ],
      "id": "ed4bf2d6-d88d-4329-bbf1-8a64db6273b5",
      "name": "Configure"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "6fLQwiMjG3EKHoVG",
          "mode": "list",
          "cachedResultUrl": "/workflow/6fLQwiMjG3EKHoVG",
          "cachedResultName": "Gavrila - Respond"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "source": "={{ $json.source }}",
            "message_id": "={{ $json.message_id }}",
            "user_id": "={{ $json.user_id }}",
            "message": "=Task ID: {{ $json.task_id }}\nSummary: {{ $json.summary }}\nInstructions:\n{{ $json.instructions }}",
            "channel_id": "={{ $json.channel_id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "source",
              "displayName": "source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "channel_id",
              "displayName": "channel_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "message_id",
              "displayName": "message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "message",
              "displayName": "message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.3,
      "position": [
        1248,
        -256
      ],
      "id": "93473d25-fcf3-40d0-9fe7-6f9563fc515c",
      "name": "Report instructions as perceived"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "fYWsAFNMx99n8Uel",
          "mode": "list",
          "cachedResultUrl": "/workflow/fYWsAFNMx99n8Uel",
          "cachedResultName": "Gavrila - Task Ops"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "task_system": "={{ $('Full Context').item.json.task_system }}",
            "task_id": "={{ $('Full Context').item.json.task_id }}",
            "summary": "={{ $('Full Context').item.json.summary }}",
            "operation": "ensure-task",
            "body": "={{ $('Full Context').item.json.instructions }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "task_system",
              "displayName": "task_system",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "task_id",
              "displayName": "task_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "summary",
              "displayName": "summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "body",
              "displayName": "body",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "operation",
              "displayName": "operation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.3,
      "position": [
        1456,
        -256
      ],
      "id": "b9d40280-0619-416d-821e-82988d4f6a17",
      "name": "Ensure there is a task",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "fYWsAFNMx99n8Uel",
          "mode": "list",
          "cachedResultUrl": "/workflow/fYWsAFNMx99n8Uel",
          "cachedResultName": "Gavrila - Task Ops"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "task_system": "={{ $('Full Context').item.json.task_system }}",
            "task_id": "={{ $('Ensure there is a task').item.json.task_id }}",
            "operation": "post-comment",
            "body": "=*Status*: {{ $('Run Agent').item.json.status }}\n*Summary*:\n{{ $('Run Agent').item.json.summary }}\n{{ $('Run Agent').item.json.commit_url ? '\\n*Commit*: ' + $('Run Agent').item.json.commit_url : '' }}\n{{ $('Run Agent').item.json.workflow_run_url ? '*Workflow Run*: ' + $('Run Agent').item.json.workflow_run_url : '' }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "task_system",
              "displayName": "task_system",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "task_id",
              "displayName": "task_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "summary",
              "displayName": "summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "body",
              "displayName": "body",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "operation",
              "displayName": "operation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.3,
      "position": [
        2256,
        -256
      ],
      "id": "a169e54f-42a5-448d-a046-85c526fd7c58",
      "name": "Post a comment to the task"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "6fLQwiMjG3EKHoVG",
          "mode": "list",
          "cachedResultUrl": "/workflow/6fLQwiMjG3EKHoVG",
          "cachedResultName": "Gavrila - Respond"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "source": "={{ $('Full Context').item.json.source }}",
            "message_id": "={{ $('Full Context').item.json.message_id }}",
            "user_id": "={{ $('Full Context').item.json.user_id }}",
            "message": "=*Task URL*: {{ $('Ensure there is a task').item.json.url }}\n*Status*: {{ $('Run Agent').item.json.status }}\n*Summary*:\n{{ $('Run Agent').item.json.summary }}\n{{ $('Run Agent').item.json.commit_url ? '\\n*Commit*: ' + $('Run Agent').item.json.commit_url : '' }}\n{{ $('Run Agent').item.json.workflow_run_url ? '*Workflow Run*: ' + $('Run Agent').item.json.workflow_run_url : '' }}\n---------------------",
            "channel_id": "={{ $('Full Context').item.json.channel_id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "source",
              "displayName": "source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "channel_id",
              "displayName": "channel_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "message_id",
              "displayName": "message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "message",
              "displayName": "message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.3,
      "position": [
        2048,
        -256
      ],
      "id": "84dc1447-04a5-4448-aa7f-b72b21f5a43e",
      "name": "Report to chat"
    }
  ],
  "pinData": {},
  "connections": {
    "Proofread task": {
      "main": [
        [
          {
            "node": "Full Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Run Agent": {
      "main": [
        [
          {
            "node": "Report to chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AITask Command Received": {
      "main": [
        [
          {
            "node": "Configure",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Full Context": {
      "main": [
        [
          {
            "node": "Report instructions as perceived",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Configure": {
      "main": [
        [
          {
            "node": "Proofread task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Report instructions as perceived": {
      "main": [
        [
          {
            "node": "Ensure there is a task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ensure there is a task": {
      "main": [
        [
          {
            "node": "Run Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Report to chat": {
      "main": [
        [
          {
            "node": "Post a comment to the task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "f9d1b752-ad6a-46cf-9188-c8d9dd8d08f7",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "04d1d37e120bf230231a954423709cc89297b436c5ea28c06a42c9abeb123424"
  },
  "id": "xYwYVnVI1XAR2Xub",
  "tags": []
}